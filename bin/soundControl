#!/bin/bash

function getRunningSinkOrDefault {
	if `pactl list short | grep RUNNING` ; then
		echo `pactl list short | grep RUNNING | cut -f2`
	else
		echo `pacmd stat | grep "Default sink name" | awk 'NF>1{print $NF}'`
	fi
}

SINK=$(getRunningSinkOrDefault)
SINKNAME=$SINK

function getVol {
	pactl get-sink-volume 0 | awk -F " +/ +" '{print $2}'
}

function notifyVol {
    currentVol=$(getVol)
    notify-send -u low "Volume :: $currentVol"
}

function isMuted {
	amixer sget Master | grep "Front Left: Playback" | awk '{print $NF}'
}

function notifyMuted {
	IS_MUTED=$(isMuted)
	notify-send -u low "Audio: $IS_MUTED"
}

function notifyMicMuted {
	STATUS=`amixer get Capture | grep "Front Left: Capture" | awk '{print $NF}'`
	notify-send -u low "Microphone $STATUS"
}

case "$1" in
	plus)
		pactl set-sink-volume 0 +10% # increase sound volume
		notifyVol
		;;
	minus)
		pactl set-sink-volume 0 -10% # increase sound volume
		notifyVol
		;;
	toggle)
		amixer set Master toggle
		notifyMuted
		;;
	ensureMute)
		IS_MUTED=$(isMuted)
		if [[ $IS_MUTED == "no" ]]; then pactl set-sink-mute $SINK toggle; fi
		;; 
	micMute)
		amixer set Capture toggle
		notifyMicMuted
		;;
	*)
		echo "Invalid argument: $1"
		exit 1
esac



