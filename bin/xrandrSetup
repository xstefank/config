#!/bin/bash

# Rearrange the order of options below according to what you would like to see in the help message.
# ARG_OPTIONAL_BOOLEAN([hdmi],[h],[Specifies that the internal HDMI port should be used for external output],[off])
# ARG_OPTIONAL_BOOLEAN([dock],[d],[Specifies that the external dock ports should be used for external output],[off])
# ARG_HELP([<The general help message of my script>])
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY Argbash v2.7.0 one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.io for more info


die()
{
	local _ret=$2
	test -n "$_ret" || _ret=1
	test "$_PRINT_HELP" = yes && print_help >&2
	echo "$1" >&2
	exit ${_ret}
}


begins_with_short_option()
{
	local first_option all_short_options='hdh'
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}

# THE DEFAULTS INITIALIZATION - OPTIONALS
_arg_hdmi="off"
_arg_dock="off"


print_help()
{
	printf '%s\n' "<The general help message of my script>"
	printf 'Usage: %s [-h|--(no-)hdmi] [-d|--(no-)dock] [-h|--help]\n' "$0"
	printf '\t%s\n' "-h, --hdmi, --no-hdmi: Specifies that the internal HDMI port should be used for external output (off by default)"
	printf '\t%s\n' "-d, --dock, --no-dock: Specifies that the external dock ports should be used for external output (off by default)"
	printf '\t%s\n' "-h, --help: Prints help"
}


parse_commandline()
{
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			-h|--no-hdmi|--hdmi)
				_arg_hdmi="on"
				test "${1:0:5}" = "--no-" && _arg_hdmi="off"
				;;
			-h*)
				_arg_hdmi="on"
				_next="${_key##-h}"
				if test -n "$_next" -a "$_next" != "$_key"
				then
					begins_with_short_option "$_next" && shift && set -- "-h" "-${_next}" "$@" || die "The short option '$_key' can't be decomposed to ${_key:0:2} and -${_key:2}, because ${_key:0:2} doesn't accept value and '-${_key:2:1}' doesn't correspond to a short option."
				fi
				;;
			-d|--no-dock|--dock)
				_arg_dock="on"
				test "${1:0:5}" = "--no-" && _arg_dock="off"
				;;
			-d*)
				_arg_dock="on"
				_next="${_key##-d}"
				if test -n "$_next" -a "$_next" != "$_key"
				then
					begins_with_short_option "$_next" && shift && set -- "-d" "-${_next}" "$@" || die "The short option '$_key' can't be decomposed to ${_key:0:2} and -${_key:2}, because ${_key:0:2} doesn't accept value and '-${_key:2:1}' doesn't correspond to a short option."
				fi
				;;
			-h|--help)
				print_help
				exit 0
				;;
			-h*)
				print_help
				exit 0
				;;
			*)
				_PRINT_HELP=yes die "FATAL ERROR: Got an unexpected argument '$1'" 1
				;;
		esac
		shift
	done
}

parse_commandline "$@"

# OTHER STUFF GENERATED BY Argbash

### END OF CODE GENERATED BY Argbash (sortof) ### ])
# [ <-- needed because of Argbash

# Displays definitions
. ~/.my-env

# TODO HDMI
if [ $_arg_hdmi = "on" ]; then
  	xrandr --output HDMI1 --auto --primary
	xrandr --output DP-4 --left-of HDMI1 --auto
	exit 0
fi

if [ $_arg_dock = "on" ]; then
  xrandr | grep -q "$DISPLAY_1 connected"
  if [ $? -eq 0 ]
  then
	  xrandr --output "$DISPLAY_1" --right-of "$DISPLAY_LAPTOP" --auto
	  timeout 2 monitor-count 1
	  xrandr --output "$DISPLAY_2" --right-of "$DISPLAY_1" --auto --primary
	  timeout 2 monitor-count 2
	  xrandr --output "$DISPLAY_3" --right-of "$DISPLAY_2" --auto
	  timeout 2 monitor-count 3
	  xrandr --output "$DISPLAY_LAPTOP" --off
	  timeout 2 monitor-count 3
	  xrandr --output "$DISPLAY_4" --right-of "$DISPLAY_3" --auto
    exit 0
  fi

  xrandr | grep -q "$DISPLAY_DOCK_1 connected"
  if [ $? -eq 0 ]
  then
    xrandr --output "$DISPLAY_DOCK_1" --off
    xrandr --output "$DISPLAY_DOCK_2" --off
    xrandr --output "$DISPLAY_DOCK_3" --off
    xrandr --output "$DISPLAY_DOCK_4" --off

    xrandr --output "$DISPLAY_DOCK_1" --right-of "$DISPLAY_LAPTOP" --auto
    xrandr --output "$DISPLAY_LAPTOP" --off
    xrandr --output "$DISPLAY_DOCK_2" --right-of "$DISPLAY_DOCK_1" --auto --primary
    xrandr --output "$DISPLAY_DOCK_3" --right-of "$DISPLAY_DOCK_2" --auto
    xrandr --output "$DISPLAY_DOCK_4" --right-of "$DISPLAY_DOCK_3" --auto
    exit 0
  fi

	#xrandr --output DP-2-2 --primary
 	#echo "Xft.dpi: 90" | xrdb -merge
	#i3-msg restart
  exit 0
fi

# no dock and no HDMI
#xrandr --output DP-1 --off
xrandr --output eDP1 --auto --primary
#xrandr --output DP-2-2 --off
#xrandr --output DP-2-1-6 --off
#xrandr --output DP-2-1-5 --off
#xrandr --output HDMI-1 --off
#xrandr -s 0
#echo "Xft.dpi: 120" | xrdb -merge
#i3-msg restart

# ] <-- needed because of Argbash
